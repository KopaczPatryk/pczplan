linter:
  rules:
    - always_declare_return_types
    - annotate_overrides
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_empty_else
    - avoid_field_initializers_in_const_classes
    # - avoid_function_literals_in_foreach_calls
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_relative_lib_imports
    - avoid_returning_null_for_void
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_types_as_parameter_names
    - avoid_unnecessary_containers
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    - constant_identifier_names
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - file_names
    - hash_and_equals
    - implementation_imports
    - join_return_with_assignment
    - library_names
    - library_prefixes
    - lines_longer_than_80_chars
    - no_duplicate_case_values
    - no_logic_in_create_state
    - non_constant_identifier_names
    - null_closures
    - one_member_abstracts
    - only_throw_errors
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_single_quotes
    - slash_for_doc_comments
    - throw_in_finally
    - type_init_formals
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    - unrelated_type_equality_checks
    - use_full_hex_values_for_flutter_colors
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_to_and_as_if_applicable
    - valid_regexps

analyzer:
  strong-mode:
    implicit-dynamic: false
  errors:
    dead_code: error
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: error
    lines_longer_than_80_chars: error
    avoid_positional_boolean_parameters: error
    # treat missing returns as a error (not a hint)
    missing_return: error
    unnecessary_new: error
    # const constructors are required when available
    prefer_const_constructors: warning
    camel_case_types: error
    # allow having TODOs in the code
    deprecated_member_use_from_same_package: ignore
    todo: ignore
    # Ignore analyzer hints for updating pubspecs when using Future or
    # Stream and not importing dart:async
    # Please see https://github.com/flutter/flutter/pull/24528 for details.
    sdk_version_async_exported_from_core: ignore
    unused_import: error
  exclude:
    - "bin/cache/**"
    - "**.g.dart"
